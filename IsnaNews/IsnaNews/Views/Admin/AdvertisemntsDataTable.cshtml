@using System.Data
@using DataLayer.Types
@model DataTable
@{
    var userAdminPermissions = (List<string>)TempData["AdminPermissions"];
    Layout = "AdminLayout";
    Tuple<DataTable, int, int, bool, bool> dataTableModel = new(Model, ViewBag.pageCount, ViewBag.AllPageCount,
    userAdminPermissions.Any(_ => _ == AdminPermissions.AdvertisementPermission.Update),
        userAdminPermissions.Any(_ => _ == AdminPermissions.AdvertisementPermission.Delete));

}
<!--Body start-->
<div class="d-flex h-100">
    <section class="flex-fill _scrollBar h-100">
        <div class="text-center">
            <div class="mx-4 uk-card uk-card-body shadow p-3 rounded-3"
                 style="background-color: white; margin-top: 100px;" dir="rtl">
                <div class="d-flex justify-content-between">
                    <h5 class="_MyFont fw-bold">لیست تبلیغات</h5>
                    @if (userAdminPermissions.Any(_ => _ == AdminPermissions.AdvertisementPermission.Add))
                    {
                        <button class="btn btn-sm btn-primary _MyFont" onclick="ShowAddModal()">
                            <span uk-icon="plus-circle"></span>
                            <span class="text-light _MyFont text-decoration-none">افزودن تبلیغ جدید</span>
                        </button>
                    }
                </div>
                @await Component.InvokeAsync("AdminDataTable", dataTableModel)
            </div>
    </section>
    <!--Body End-->

</div>
<div id="ModalsDiv"></div>
<script>
    function ShowErrors(errors) {
        for (var i = 0; i < errors.length; i++) {
            UIkit.notification({
                message: `<span class="_MyFont" dir="rtl">${errors[i]}</span>`,
                status: 'danger',
                timeout: 7000,
                pos: 'top-right'
            })
        }
    }
    function SetSuccess() {
        UIkit.notification({
            message: `<span class="_MyFont" dir="rtl">با موفقیت ثبت شد</span>`,
            status: 'success',
            timeout: 3000,
            pos: 'top-right'
        })
        setTimeout(function () {
            window.location.reload()
        }, 3000)
    }
    function refreshModals() {
        var AddModal = document.getElementById('AddModal')
        var EditModal = document.getElementById('EditModal')
        if (EditModal != null) {
            EditModal.remove()
        }
        if (AddModal != null) {
            AddModal.remove()
        }
    }
</script>

@if (userAdminPermissions.Any(_ => _ == AdminPermissions.AdvertisementPermission.Add))
{
    <script>
        //ADD
        function ShowAddModal() {
            $.ajax({
                url: '/Admin/GetAddModalAdvertisemnt',
                type: 'GET',
                async: false,
                success: function (data) {
                    console.log(data)
                    refreshModals()
                    UIkit.modal(data).show()
                },
                error: function (data) {
                    console.log(data.responseText)
                    ShowErrors(data.responseJSON.error)
                }
            })
        }
        function AddModalBanerChange() {
            var fileInput = document.getElementById('MainBrandImageInput');
            var preview = document.getElementById('MainBrandImagePreview');

            preview.innerHTML = ''
            var file = event.target.files[0];

            if (file.type.endsWith('png') ||
                file.type.endsWith('jpeg') ||
                file.type.endsWith('jpg') ||
                file.type.endsWith('gif') ||
                file.type.endsWith('webp')) {
                IsFileValid = true;
                var reader = new FileReader();
                reader.addEventListener('load', function (event) {
                    var img = document.createElement('img');
                    img.src = event.target.result;
                    img.width = 240;
                    img.height = 240;
                    img.classList.add('d-inline-block', 'rounded-3', 'm-2')
                    preview.appendChild(img);
                });

                reader.readAsDataURL(file);
            }
            else {
                event.target.value = ''
                UIkit.notification({
                    message: '<span class="_MyFont">فرمت فایل مورد نظر فقط عکس میتواند باشد</span>',
                    status: 'danger',
                    pos: 'top-right',
                    timeout: 5000
                });

            }
        }

        function Add() {
            var MyForm = document.getElementById('MyForm1')

            if (!MyForm.checkValidity()) {
                var tmpSubmit = document.createElement('button')
                MyForm.appendChild(tmpSubmit)
                tmpSubmit.click()
                MyForm.removeChild(tmpSubmit)
            }
            else {
                document.getElementById('progressDiv').classList.remove('uk-hidden')
                var data = new FormData(MyForm);
                $.ajax({
                    url: '/Admin/AddAdvertisemnt',
                    type: 'POST',
                    data: data,
                    processData: false,
                    contentType: false,
                    xhr: function () {
                        var xhr = new window.XMLHttpRequest();
                        xhr.upload.addEventListener("progress", function (evt) {
                            if (evt.lengthComputable) {
                                var percentComplete = evt.loaded / evt.total;
                                $('.progress-bar').css({
                                    width: percentComplete * 100 + '%'
                                });
                                if (percentComplete == 1) {
                                    $('.progress-bar').addClass('bg-success');
                                }
                            }
                        }, false);
                        return xhr;
                    },
                    success: function (data) {
                        SetSuccess()
                    },
                    error: function (data) {
                        ShowErrors(data.responseJSON.error)
                    }
                });
            }
        }
    </script>

}
@if (userAdminPermissions.Any(_ => _ == AdminPermissions.AdvertisementPermission.Update))
{
    <script>
        function BanerChange(input) {
            var fileInput = document.getElementById('MainBrandImageInput');
            var preview = document.getElementById('MainBrandImagePreview');
            preview.innerHTML = ''
            var file = event.target.files[0];

            if (file.type.endsWith('png') ||
                file.type.endsWith('jpeg') ||
                file.type.endsWith('jpg') ||
                file.type.endsWith('gif') ||
                file.type.endsWith('webp')) {
                IsFileValid = true;
                var reader = new FileReader();
                reader.addEventListener('load', function (event) {
                    var img = document.createElement('img');
                    img.src = event.target.result;
                    img.width = 240;
                    img.height = 240;
                    img.classList.add('d-inline-block', 'rounded-3', 'm-2')
                    preview.appendChild(img);
                });

                reader.readAsDataURL(file);
            }
            else {
                event.target.value = ''
                UIkit.notification({
                    message: '<span class="_MyFont">فرمت فایل مورد نظر فقط عکس میتواند باشد</span>',
                    status: 'danger',
                    pos: 'top-right',
                    timeout: 5000
                });

            }
        }
        function Update(modelId) {
            var MyForm = document.getElementById('MyForm1')

            if (!MyForm.checkValidity()) {
                var tmpSubmit = document.createElement('button')
                MyForm.appendChild(tmpSubmit)
                tmpSubmit.click()
                MyForm.removeChild(tmpSubmit)
            }
            else {
                var preview = document.getElementById('MainBrandImagePreview');
                document.getElementById('progressDiv').classList.remove('uk-hidden')
                var data = new FormData(MyForm);
                var perviousBaner = preview.children[0].src
                data.append('PerviuosMainBaner', perviousBaner)
                data.append('Id', modelId)
                $.ajax({
                    url: '/Admin/UpdateAdvertisemnt',
                    type: 'POST',
                    data: data,
                    processData: false,
                    contentType: false,
                    xhr: function () {
                        var xhr = new window.XMLHttpRequest();
                        xhr.upload.addEventListener("progress", function (evt) {
                            if (evt.lengthComputable) {
                                var percentComplete = evt.loaded / evt.total;
                                $('.progress-bar').css({
                                    width: percentComplete * 100 + '%'
                                });
                                if (percentComplete === 1) {
                                    $('.progress-bar').addClass('bg-success');
                                }
                            }
                        }, false);
                        return xhr;
                    },
                    success: function (data) {
                        SetSuccess()
                    },
                    error: function (data) {
                        ShowErrors(data.responseJSON.error)
                    }
                });
            }
        }
        function GetEditByIdModal(modelId) {
            $.ajax({
                url: '/Admin/GetEditModalAdvertisemnt?id=' + modelId,
                type: 'GET',
                contentType: 'application/json',
                success: function (data) {
                    refreshModals()
                    UIkit.modal(data).show()
                },
                error: function (data) {
                    console.log(data.responseText)

                    ShowErrors(data.responseJSON.error)
                }
            })
        }
    </script>
}

@if (userAdminPermissions.Any(_ => _ == AdminPermissions.AdvertisementPermission.Delete))
{
    <script>
        //DELETE
        function ValidateDelete(id) {
            var MyModal = `<div id="ValidateDeleteModal" uk-modal>
                                                    <div class="uk-modal-dialog">
                                                        <button class="uk-modal-close-default" type="button" uk-close></button>
                                                        <div class="uk-modal-body">
                                                            <h3 class="_MyFont fw-bold text-danger">آیا از حذف مطمئنید؟</h3>
                                                        </div>
                                                        <div class="d-flex justify-content-center _MyFont uk-modal-footer">
                                                            <button class="uk-button uk-button-default mx-1 uk-modal-close">خیر</button>
                                                            <button class="uk-button uk-button-danger mx-1" onclick="SetDelete(${id})">بله</button>
                                                        </div>
                                                    </div>
                                                </div>`
            UIkit.modal(MyModal).show()
        }
        function SetDelete(id) {
            $.ajax({
                url: '/Admin/DeleteAdvertisemnt?id=' + id,
                type: 'GET',
                contentType: 'application/json',
                success: function (data) {
                    SetSuccess()
                },
                error: function (data) {
                    console.log(data.responseText)

                    ShowErrors(data.responseJSON.error)
                }
            })
        }


    </script>

}