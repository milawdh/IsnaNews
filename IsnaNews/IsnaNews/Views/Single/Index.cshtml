@{
    Layout = "HomeLayout";
}
@using DataLayer.Dtos;
@using DataLayer.Dtos.Shared
@using ServiceLayer.Utils
@model NewsPublicDto
<div uk-grid class="uk-grid">
    <div class="uk-width-1-1 uk-width-3-4@l">
        <!--BreadCrumbs Start-->
        <div class="mx-auto my-2 _SingleHeader d-flex justify-content-end">
            <ul class="uk-subnav uk-subnav-divider m-0 p-0">
                <li class="uk-active d-sm-flex d-none">
                    <a class="text-decoration-none" href="#">
                        @Model.Title
                    </a>
                </li>
                <li><a class="text-decoration-none" asp-action="Index" asp-controller="Archive" asp-route-c="@Model.CategoryId">@Model.CategoryName</a></li>
                <li><a class="text-decoration-none" asp-action="Index" asp-controller="Archive">اخبار</a></li>
                <li><a class="text-decoration-none" asp-action="Index" asp-controller="Home">خانه</a></li>
            </ul>
        </div>
        <!--BreadCrumbs End-->
        <!--Body Start-->
        <div dir="rtl" class="mx-auto _SingleBody my-2 p-3">
            <div style="border-bottom:solid 1px;"
                 class="p-2 _SingleBodyHeadersDiv d-flex justify-content-sm-between">
                <span>
                    <span>خبرنگار</span>
                    :
                    <span style="color: red;">@Model.ReporterName</span>
                </span>
                <span>
                    <span>تاریخ انتشار</span>
                    :
                    <span>1402/4/12</span>
                </span>
            </div>
            <div class="text-center">
                <h2 class="_MyFont fw-bold text-primary-emphasis">@Model.Title</h2>
                <!--Video Start-->
                @{
                    if (Model.Videos.Count > 0)
                    {
                        @await Component.InvokeAsync("VideoBox", Model.Videos)
                    }
                }
                <!--Video End-->
            </div>
            <hr>
            <div id="NewsImages" uk-scrollspy="target: > div; cls: uk-animation-fade; delay: 300;offset:450;"
                 dir="rtl" style="height: 40%;" class="carousel my-2 slide" data-bs-ride="carousel">

                <h5 class="_MyFont text-muted">- عکس ها</h5>
                <!--Images Start-->
                <div class="uk-position-relative uk-visible-toggle uk-light my-2" uk-slideshow=" animation: push">

                    <ul class="uk-slideshow-items" uk-lightbox>
                        <li>
                            <a href="~/Resources/@Model.MainImageUrl.ToString()">
                                <img src="~/Resources/@Model.MainImageUrl.ToString()" uk-cover>
                            </a>
                        </li>
                        @foreach (var i in Model.Images)
                        {

                            <li>
                                <a href="~/Resources/@i.ToString()">
                                    <img src="~/Resources/@i.ToString()" uk-cover>
                                </a>
                            </li>
                        }
                    </ul>

                    <a class="uk-position-center-left uk-position-small uk-hidden-hover  bg-dark rounded-circle"
                       href uk-slidenav-previous uk-slideshow-item="previous"></a>
                    <a class="uk-position-center-right uk-position-small uk-hidden-hover bg-dark rounded-circle"
                       href uk-slidenav-next uk-slideshow-item="next"></a>

                </div>
                <!--Images End-->
                <!--Body Start-->
                @Html.Raw(Model.Body)
                <!--Body End-->
                <!--KeyWords Start-->
                @{
                    if (Model.Keywords.Count > 0)
                    {
                        <hr>
                        @await Component.InvokeAsync("Keywords", Model.Keywords)
                    }
                }
                <!--KeyWords End-->
                <!--Attach Start-->
                <!--Attach End-->
                <hr>
                <!--ViewCount Start-->
                <div>
                    <span>
                        <span uk-icon="eye" class="uk-icon-button"></span>
                        <span>تعداد بازدید:</span>
                        <span dir="ltr">@Extentions.FormatViewCount(Model.ViewCount)</span>
                    </span>
                </div>
                <!--ViewCount End-->
            </div>
        </div>
    </div>
    <!--Body End-->
    <!--MostViewdNews Start-->
    @await Component.InvokeAsync("MostViewedNews")
    <!--MostViewdNews End-->
</div>

<!--Comments Start-->
@await Component.InvokeAsync("CommentsBar", Model.NewsComments)
<!--Comments End-->
<!--Add Comment Start-->
<section class="AddCommentSec my-3 p-2 d-grid mx-auto" dir="rtl">
    <div class="d-flex justify-content-between ">
        <h5 class="_MyFont fw-bold">ارسال دیدگاه شما</h5>
        <span>
            <svg width="32px" height="32px" viewBox="-0.5 0 32 32" version="1.1" xmlns="http://www.w3.org/2000/svg"
                 xmlns:xlink="http://www.w3.org/1999/xlink" xmlns:sketch="http://www.bohemiancoding.com/sketch/ns"
                 fill="#000000">
                <g id="SVGRepo_bgCarrier" stroke-width="0"></g>
                <g id="SVGRepo_tracerCarrier" stroke-linecap="round" stroke-linejoin="round"></g>
                <g id="SVGRepo_iconCarrier">
                    <title>comments</title>
                    <desc>Created with Sketch Beta.</desc>
                    <defs> </defs>
                    <g id="Page-1" stroke="none" stroke-width="1" fill="none" fill-rule="evenodd"
                       sketch:type="MSPage">
                        <g id="Icon-Set-Filled" sketch:type="MSLayerGroup"
                           transform="translate(-259.000000, -257.000000)" fill="#446fb4">
                            <path d="M265.5,267 C266.329,267 267,267.672 267,268.5 C267,269.329 266.329,270 265.5,270 C264.671,270 264,269.329 264,268.5 C264,267.672 264.671,267 265.5,267 L265.5,267 Z M271.5,267 C272.329,267 273,267.672 273,268.5 C273,269.329 272.329,270 271.5,270 C270.671,270 270,269.329 270,268.5 C270,267.672 270.671,267 271.5,267 L271.5,267 Z M277.5,267 C278.329,267 279,267.672 279,268.5 C279,269.329 278.329,270 277.5,270 C276.671,270 276,269.329 276,268.5 C276,267.672 276.671,267 277.5,267 L277.5,267 Z M268.637,279.736 C269.414,279.863 271.181,280 272,280 C279.18,280 284,274.657 284,268.375 C284,262.093 277.977,257 272,257 C264.811,257 259,262.093 259,268.375 C259,272.015 260.387,275.104 263,277.329 L263,283 L268.637,279.736 L268.637,279.736 Z M285.949,266.139 L286,267 C286.008,267.817 286,267.742 286,268.5 C286,276.475 279.716,282 271,282 L268,282 C270.38,284.328 273.149,285.75 277,285.75 C277.819,285.75 278.618,285.676 279.395,285.549 L285,289 L285,283.329 C288.04,281.246 290,278.015 290,274.375 C290,271.131 288.439,268.211 285.949,266.139 L285.949,266.139 Z"
                                  id="comments" sketch:type="MSShapeGroup"></path>
                        </g>
                    </g>
                </g>
            </svg>
            <span uk-icon="icon:plus;ratio:1" style="background-color:#446fb4;
                        color: white; height: 24px; width: 24px; border-radius: 24px;" class="uk-icon-button"></span>
        </span>
    </div>
    <div class="form-floating">
        <form enctype="multipart/form-data" id="AddCommentBody">
            @Html.AntiForgeryToken()
            <textarea placeholder="متن دیدگاه..." class="_MyFont uk-textarea" cols="30" name="Body" rows="10"></textarea>
        </form>
    </div>
    <div class="text-center">
        <button class="btn btn-outline-primary _MyFont" onclick="AddComment(@Model.Id)">ارسال دیدگاه</button>
    </div>
</section>
<!--Add Comment End-->



<script>
    function AddComment(postId) {
        var formData = new FormData(document.getElementById('AddCommentBody'))
        formData.append('PostId',postId)
        debugger
        $.ajax({
            url: '/Single/AddComment',
            type: 'POST',
            data: formData,
            async: true,
            enctype: 'multipart/form-data',
            contentType: false,
            processData: false,
            success: function () {
                SetSuccess()
            },
            error: function (error) {
                UIkit.notification({
                    message: `<span class="_MyFont" dir="rtl">${error.responseText}</span>`,
                    status: 'danger',
                    timeout: 7000,
                    pos: 'top-right'
                })
            }
        })
    }
</script>
<script>
    function SetSuccess() {
        UIkit.notification({
            message: `<span class="_MyFont" dir="rtl">با موفقیت ثبت شد</span>`,
            status: 'success',
            timeout: 3000,
            pos: 'top-right'
        })
        setTimeout(function () {
            window.location.reload()
        }, 3000)
    }
</script>

